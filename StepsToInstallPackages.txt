
# Install MICRO
sudo apt install micro

#Insall NASM
sudo apt install nasm

#Install Vuirtual Machine
sudo apt install qemu
sudo apt install qemu-system-x86
sudo apt install qemu qemu-system qemu-utils

Install MCopy
sudo apt install mtools

Install bochs
sudo apt install bochs bochs-sdl bochsbios vgabios

To Run The OS
qemu-system-i386 -fda build/main_floppy.img 


# When ./run.sh fails
unset GTK_PATH


# Install Watcom
sudo apt install snapd
sudo snap install open-watcom --beta

export PATH="/snap/open-watcom/2/binl:$PATH"
echo 'export PATH="/snap/open-watcom/2/binl:$PATH"' >> ~/.bashrc
source ~/.bashrc
sudo mkdir -p /usr/bin/watcom/binl
sudo ln -s /snap/open-watcom/2/binl/wcc /usr/bin/watcom/binl/wcc
sudo ln -s /snap/open-watcom/2/binl/wlink /usr/bin/watcom/binl/wlink


# Install Binutils and GCC
Download latest tar,gz file in Project/Toolchain folder
        https://ftp.gnu.org/gnu/gcc/gcc-11.1.0/
        https://ftp.gnu.org/gnu/binutils/?C=M%3BO%3DA
extract both the files
And if you wan to crosscompile for x86 the use below commands   
        export PREFIX="$HOME/Project/Toolchain/i686-elf"
        export TARGET=i686-elf
        export PATH="$PREFIX/bin:$PATH"
Go to Project/Toolchain folder and run below commands:
        cd Project/Toolchain
        mkdir binutils-build
        cd binutils-build
        ../binutils-2.45/configure --target=$TARGET --prefix="$PREFIX" --with-sysroot --disable-nls --disable-werror 
        make -j4
        make install
        cd ../gcc-build
        ../gcc-11.1.0/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --enable-languages=c,c++ --without-headers
        make -j8 all-gcc
        make -j8 all-target-libgcc
        make install-gcc
        make install-target-libgcc

Test GCC is working
        cd /home/abhilash/Project/nanobyte_experiments/GccTest/
        export TOOLCHAIN="$HOME/Project/Toolchain/i686-elf"
        make
        make Run


        




